getwd()
setwd("..")
load("working.RData")
library(skitools)
load_all()
load_all()
load_all()
ls()
g1 = gGraph$new(jabba=jab)
ed
node.dt
seq_along(ed)
1:nrow(ed)
ed[, node.dt[oid %in% from], by=1:nrow(ed)]
ed[, node.dt[oid %in% from]]
ed[, from]
head(loose.id)
ed[, ifelse(from %in% loose.id, "", ", source: ")]
rbind(NULL, ed)
edByType
edByType = by(ed, ed$type, function(x) x)
edByType
edByType$something
ed[1:5, node.dt[from %in% oid, iid])]
ed[1:5, node.dt[from %in% oid, iid]]
ed[1:5, node.dt[oid %in% from, iid]]
ed[1:5, node.dt[which(oid %in% from), iid], by=1:5]
ed[1:5]
ed[1:5, ifelse(soStr=="+", node.dt[which(oid %in% from), node.dt[which(rid %in% from)), iid], by=1:5]
ed[1:5, ifelse(soStr=="+", node.dt[which(oid %in% from), node.dt[which(rid %in% from), iid], by=1:5]
ed[1:5, ifelse(soStr=="+", node.dt[which(oid %in% from),iid], node.dt[which(rid %in% from), iid]), by=1:5]
node.dt
oid = gr2dt(seg)[, which(strand == "+" & loose==F)]
oid
rid = gr2dt(seg)[, which(strand == "-" & loose==F)]
length(oid)
length(rid)
node.dt
ed
ed[1:5, so := ifelse(soStr=="+", node.dt[oid %in% from, iid], node.dt[rid %in% from, iid])]
ed
node.dt[c(937,1962)]
 seg[c(937,1962)]
ed[, so := ifelse(soStr=="+", node.dt[oid %in% from, iid], node.dt[rid %in% from, iid])]
ed
ed[is.na(so)]
node.dt
seg[c(2045, 2670)]
node.dt[rid==2670]
node.dt[oid==2670]
node.dt[ oid == 0]
ed[type=="loose"]
seg[2208]
ed = g1$edges
ed
                         ed[,":="(soStr = as.character(strand(seg[from])), siStr = as.character(strand(seg[to])))]
ed
abe
abe$key
dim(abe)
posAbEd = as.data.table(ab.edges[,1:2,"+"])
posAbEd = as.data.table(g1$ab.edges[,1:2,"+"])
posAbEd
posAbEd[, from+to]
posAbEd[is.na(from+to)]
posAbEd[!is.na(from+to)]
posAbEd[!is.na(from+to)][, any(is.na(from))]
posAbEd[!is.na(from+to)][, any(is.na(to))]
posAbEd = posAbEd[!is.na(from+to)]
key(abe)
abe
abe
edByType$reference
edByType$loose
ifelse(is.null(edByType$reference), NULL, edByType$reference[soStr=="+"])
edByType$reference[soStr=="+"]
ed
table(ed$type)
                         eType = setNames(c("REF", "ALT", "LOOSE"), unique(ed$type))
eType
ed.dt
ed.dt[is.na(so)]
ed.dt[is.na(si)]
ed.dt
ed.dt[duplicated(from, to)]
ed.dt[from==70 & to==2056]
ed.dt[duplicated(paste(from, to, sep="_"))]
head(ed[so.str==-1])
head(ed.dt[so.str==-1])
ed.et
ed.dt
ed.dt
ed.dt
seg[c(1001,20227)]
seg[c(1001,2027)]
g1$edges[from==1001]
eType
ed.dt
ed.dt[type=="LOOSE"]
NA*1
ed.dt
connections.json
cccccccccccccc
class(connections.json)
nchar(connections.json)
ed.dt
g1$seqInfo
g1$seqInfo[seqnames %in% seqnames(seg)]
class(g1$seqInfo)
seqnames(seg)
as.character(seqnames(seg))
as.character(runValues(seqnames(seg)))
as.character(runValue(seqnames(seg)))
as.character(levels(seqnames(seg)))
g1$seqInfo[seqnames %in%  as.character(levels(seqnames(seg)))]
chrs = g1$seqInfo[seqnames %in%  as.character(levels(seqnames(seg)))]
chrs
chrs[, paste("{ chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw("red"), " }", collapse=",\n\t", se[="")]
chrs[, paste("{ chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw("red"), " }", collapse=",\n\t", sep="")]
print(chrs[, paste("{ chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw("red"), " }", collapse=",\n\t", sep="")])
cat(chrs[, paste("{ chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw("red"), " }", collapse=",\n\t", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw("red"), " }", collapse=",\n\t", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw("red"), " }", collapse=",\n", sep="")])
library(RColorBrewer)
rainbow
rainbow()
rainbow(25)
qw(rainbow(25))
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I)), " }", collapse=",\n", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I())), " }", collapse=",\n", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I[.])), " }", collapse=",\n", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I[])), " }", collapse=",\n", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I[seqnames])), " }", collapse=",\n", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I[seqnames!=""])), " }", collapse=",\n", sep="")])
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(.I)), " }", collapse=",\n", sep="")])
chr[,.I]
chrs[,.I]
cat(chrs[, paste("\t{", " chromosome: ", qw(seqnames), " startPoint: ", 1, " endPoint: ", seqlengths, " color: ", qw(rainbow(max(.I))), " }", collapse=",\n", sep="")])
getwd()
load_all()
g1 = gGraph$new(jabba=jab)
js1 = g1$json <- "HCC1143.js"
g1$edges
g1$edges[, as.character(strand(g1$segstats[from]))]
g1$edges[, ":="(soStr = as.character(strand(g1$segstats[from]), siStr = as.character(strand(g1$segstats[to]))]
g1$edges[, ":="(soStr = as.character(strand(g1$segstats[from])), siStr = as.character(strand(g1$segstats[to])))]
g1$edges
load_all()
g1 = gGraph$new(jabba=jab)
js1 = g1$json <- "HCC1143.js"
as.character(NA)
fuckr()
as.character(NA)
js1 = g1$json <- "HCC1143.js"
ls()
node.dt
node.dt[,paste0(iid,chromosome, startPoint)]
node.dt[,paste0(iid,chromosome, startPoint, endPoint)]
node.dt[,paste0(iid,chromosome, startPoint, endPoint, y, qw(title))]
node.dt[,paste0(iid,chromosome, startPoint, endPoint, y, qw(title),qw(strand))]
intervals.json = node.dt[, paste0(
                             c("intervals: [", paste(
                                                   "\t{",
                                                   "iid: ", iid,
                                                   ", chromosome: ", chromosome,
                                                   ", startPoint: ", startPoint,
                                                   ", endPoint: ", endPoint,
                                                   ", y: ", y,
                                                   ", title: ", qw(title),
                                                   ", type: ", qw(type),
                                                   ", strand: ", qw(strand),
                                                   "}",
                                                   sep = "",
                                                   collapse = ',\n'),
                               "]"),
                             collapse = '\n')
                             ]
c
load_all()
g1 = gGraph$new(jabba=jab)
js1 = g1$json <- "HCC1143.js"
node.dt
node.dt[, qw(type)]
Q
getwd()
ls()
rm("gGraph")
load_all()
g1 = gGraph$new(jabba=jab)
js1 = g1$json <- "HCC1143.js"
0
0
