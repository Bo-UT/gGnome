% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gGnome.R
\docType{class}
\name{gGraph-class}
\alias{gGraph-class}
\alias{gNode}
\title{genomic rearrangement graph}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
gNode
}
\arguments{
\item{tile}{the \code{GRanges} genome segmentation}

\item{juncs}{the \code{GRangesList} of SV junctions}

\item{cn}{\code{logical} if \code{TRUE} honor the copy number annotation in the input}

\item{jabba}{the path to or actual \code{list} of
\href{http://github.com/mskilab/JaBbA}{JaBbA} output}

\item{weaver}{the directory containing the output files from Weaver
\href{https://github.com/ma-compbio/Weaver}{Weaver}}

\item{prego}{the interval.results output file from PREGO
\href{http://compbio.cs.brown.edu/projects/prego/}{PREGO}}

\item{segs}{\code{GRanges} object of the nodes}

\item{es}{\code{data.table} object of the edges}

\item{ploidy}{defined as the width weighted copy number of the nodes}

\item{purity}{the proportion of cells that has rearranged genome described by the graph
in the biological sample, the rest is assumed diploid reference}

\item{filename}{a path to the input or output file}

\item{genome}{\code{seqinfo}, \code{seqlengths}, or \code{BSgenome} objects of the reference genome}

\item{chr}{\code{logical} scalar, whether chromosome names should have the "chr" prefixes}

\item{include.junk}{\code{logical} scalar, whether to keep the unassembled gaps in reference genome}

\item{ploidy}{\code{numeric} scalar, the ploidy with which to initialize the simple graph}

\item{bps}{\code{GRanges} of genomic breakpoints or segments}

\item{regular}{\code{logical} or \code{character}, defining the \code{seqlevels} of the regular chromosomes,
or non-unassembled gaps in a reference genome, if \code{TRUE} will read this info from DEFAULT_REGULAR_CHR}

\item{pad}{the amount of extension up and downstream of the ranges when defining genomic ranges}

\item{mod}{\code{logical} scalar, whether to modify the instance by reference (i.e. \code{self}) or produce
a copy of the output}

\item{maxcn}{\code{numeric}, any node copy number exceeding will be capped}

\item{maxweight}{\code{numeric}, similar to \code{\link{maxcn}}, but for edges}

\item{gGnome.js}{\code{character}, the path to the repository of gGnome.js}

\item{invoke}{\code{logical} scalar, whether to start gGnome.js server right away}
}
\description{
The main work horse of this package. Rearrangement graph G=(V, E), where V is a set of
strand-specific \code{GRanges} that both strand of any range must be present, and E is
a set of directed edges connecting adjacent nodes stored in the form of \code{data.table}
with two required columns \code{from} and \code{to} that matches the node's index in V.

Every gGraph must be defined on a reference genome, and that is stored in the \code{seqinfo}
of V. Optional metadata is allowed and appended as extra columns in V or E, some of which
are required by the descendant classes like \code{bGraph}.

gNodes and edges are necessary and sufficient to define a \code{gGraph} instance, while
optional metadata fields like copy numbers, edge attributes can be extended.

In the following examples \code{gg} is a gGraph object.
}
\section{Details}{

\subsection{Consructors}{
To parse the output from genome graph callers like JaBbA and load it as a gGraph/bGraph object,
use \code{gread()}.
}
}

\keyword{datasets}
